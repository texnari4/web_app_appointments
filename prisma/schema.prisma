generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Client {
  id           String        @id @default(cuid())
  phone        String
  name         String
  tgUserId     String?       @unique
  createdAt    DateTime      @default(now())
  appointments Appointment[]
}

model Master {
  id           String        @id @default(cuid())
  name         String
  phone        String?
  description  String?
  createdAt    DateTime      @default(now())
  appointments Appointment[]
  services     MasterService[]
}

model Service {
  id           String        @id @default(cuid())
  name         String
  description  String?
  price        Int
  durationMin  Int           // 30, 60, ...
  createdAt    DateTime      @default(now())
  masters      MasterService[]
  appointments Appointment[]
}

model MasterService {
  id        String  @id @default(cuid())
  master    Master  @relation(fields: [masterId], references: [id], onDelete: Cascade)
  masterId  String
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId String

  @@unique([masterId, serviceId], name: "masterId_serviceId_unique")
}

model Appointment {
  id         String            @id @default(cuid())
  client     Client            @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId   String
  master     Master            @relation(fields: [masterId], references: [id], onDelete: Cascade)
  masterId   String
  service    Service           @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId  String
  startsAt   DateTime
  endsAt     DateTime
  status     AppointmentStatus @default(PENDING)
  note       String?
  createdAt  DateTime          @default(now())

  @@index([masterId, startsAt])
  @@index([clientId, startsAt])
}
